<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry Pis on Ed&#39;s Space - Notes</title>
    <link>/worknotes/docs/pi/</link>
    <description>Recent content in Raspberry Pis on Ed&#39;s Space - Notes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="/worknotes/docs/pi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Combining the Orange Pi 5 Pro and YOLOv5 for bird detection</title>
      <link>/worknotes/docs/pi/yolov5-orangepi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/worknotes/docs/pi/yolov5-orangepi/</guid>
      <description>Combining the Orange Pi 5 Pro and YOLOv5 for bird detection # I started this project to record and identify the birds that we saw on our verandah throughout the day, as well as an excuse to learn about object detection. I aimed at using YOLO mainly because the ultralytics package is very easy to use and the performance-accuracy tradeoff was good.&#xA;When I first got started, it was quite easy to play with ultralytics and its latest iterations of YOLO on my laptop, but my main constraint was that I didn&amp;rsquo;t have any machines that were a good (and affordable) candidate to process the videos.</description>
    </item>
    <item>
      <title>Reducing Jetson Nano OS for Server</title>
      <link>/worknotes/docs/pi/trim-jetsonnano/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/worknotes/docs/pi/trim-jetsonnano/</guid>
      <description>Reducing Jetson Nano OS for Server # The Nvidia Jetson Nano is a Single Board Computer (SBC) with a scaled-down Nvidia GPU (Tegra X1). I have the 2GB version, the smallest available. The OS that Nvidia forces you to use comes with a full-blown desktop environment, which chews through the 2GB of RAM pretty easily - not leaving as much room as I&amp;rsquo;d like for other things.&#xA;Consequently, this page is to document the steps to trim down the OS to save disk space and RAM - adding to steps documented elsewhere.</description>
    </item>
    <item>
      <title>Setting Up Public Webserver on Raspberry Pi</title>
      <link>/worknotes/docs/pi/webserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/worknotes/docs/pi/webserver/</guid>
      <description>Setting Up Public Webserver on Raspberry Pi # The instructions here assumes you&amp;rsquo;re using Raspberry Pi Lite as the OS on the Raspberry Pi. Other OS&amp;rsquo; are largely similar though. The main difference will be the packages and package managers, and the firewall tool.&#xA;Setup the pi to host the server&#xA;Flash disk with raspberry pi lite. Insert disk into pi and power them on. (follow the instructions here up to step 4) Setup router to forward http/https/ssh requests to the Raspberry Pi</description>
    </item>
    <item>
      <title>Setting Up Raspberry Pi Slurm Cluster</title>
      <link>/worknotes/docs/pi/slurm-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/worknotes/docs/pi/slurm-cluster/</guid>
      <description>Setting Up Raspberry Pi Slurm Cluster # Flash disk(s) with raspberry pi lite. Insert disk(s) into pi(s) and power them on.&#xA;Run sudo raspi-config&#xA;update raspi-config change hostname setup ssh change password for pi user set wlan locale set timezone setup login-less ssh between nodes.&#xA;create key on one of the nodes&#xA;sudo ssh-keygen # save it somewhere central like in /etc/ssh configure ssh to use the newly created key by editing /etc/ssh/ssh_config and adding</description>
    </item>
  </channel>
</rss>
